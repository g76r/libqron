graph g {
  newrank=true;
  graph [xcompound=true,xranksep=1,splines=true,xrankdir=LR]
  edge [arrowhead=vee,dir=forward]
  node [shape=box,style="rounded,filled",fillcolor=grey90]

  start [shape=circle,style=filled,width=.2,label="",fillcolor=black]
  end [shape=circle,style=filled,width=.2,peripheries=2,label="",fillcolor=black]

  start -- planned [label="plantask action"]
  start -- queued [label="trigger, action, etc."]
  planned -- queued [label="queuewhen met"]
  planned -- canceled [label="cancelwhen met"]
  queued -- canceled [label="duplicated requests, depending\non enqueue policy"]
  canceled -- end
  queued -- running [label="when all prerequesites\nare met (resources, etc.)"]
  running -- waiting [label="when there are\nunfinished\nherded tasks"]
  running -- success [label="depending on return\ncode and mean (ssh:\n0, http: 200..299,\netc.)"]
  running -- failure [label="depending on return\ncode and mean\n(ssh: !0, etc.)"]
  waiting -- success [label="depending on herding\npolicy and herded\ntasks statuses"]
  waiting -- failure [label="depending on herding\npolicy and herded\ntasks statuses"]
  queued -- failure [xlabel="when some config\nerrors disable\nstarting"]
  success -- end
  failure -- end

  edge [color=navy,fontcolor=navy]
  start -- planned [xlabel="planTask()"]
  start -- queued [xlabel="requestTask()"]

  edge [color=orangered,fontcolor=orange]
  queued -- canceled [xlabel="cancelRequest()"]

  edge [color=orangered,fontcolor=orangered]
  running -- failure [xlabel="abortTask()"]
}
