#(pf (version 1.0))
(qrontab
 (param globalparam1 foobar)
 #(param(key stderrfilter)(value "^Warning: Permanently added .* to the list of known hosts.$"))
 (setenv a.b.c.d %!yyyy)
 (unsetenv LS_COLORS LD_LIB*)

 # tasks
 (taskgroup(id app1.batch)
  (setenv ::FOOBAR+ %!fqtn)
  (unsetenv DISPLAY)
 )
 (task (id batch3)(taskgroup app1.batch)(mean local)
  (command /bin/false)
  (target localhost)
  (unsetenv *)
  (trigger(cron 2/10 * * * * *))
  (resource(kind memory)(quantity 103))
  (maxexpectedduration 2)
  (minexpectedduration 6)
 )
 (task (id batch4)(taskgroup app1.batch)(mean ssh)(target localhost)
  (command /tmp/foo %!yyyy)
  (param foo2 bar2)
  (setenv BARFOO)
  (setenv FOOBAR ::%!fqtn:4)
  (setenv foo2)
  (unsetenv SSH_*)
  (trigger(cron 1/10 * * * * *))
  (resource(kind memory)(quantity 104))
  #(param stderrfilter ".*")
 )
 (task(id sleep1)(taskgroup app1.batch)(mean local)
  (command sleep 300)
  (trigger(cron 0 * * * * *))
  (maxexpectedduration 30)
 )
 (taskgroup(id app1.polling))
 (task (id poll1)(taskgroup app1.polling)(mean http)
  (command /console/index.html?taskrequestid=%!taskrequestid)
  (target localhost)
  (trigger(cron 3/10 * * * * *))
  #(param method put)
  (param port 8086)
  (minexpectedduration 2.5)
 )

 # infrastructure
 (host(id localhost)(hostname localhost)(resource(kind memory)(quantity 128)))
 (host(id server1)(hostname server1)(resource(kind memory)(quantity 1024)))
 (host(id server2)(hostname server1)(resource(kind memory)(quantity 1024)))
 (host(id server3)(hostname server1)(resource(kind memory)(quantity 4096)))
 (cluster(id cluster-back)
   (host server1)(host server2)(host server3)(host server4)
   (balancing first)
 )

 # alerts
 (alerts
  (rule(match task.failure.app1.batch.*) # task.failure.%!fqtn
        (mail(address gb@localhost, root@localhost))
   )
   (rule(match task.failure.app1.batch.*) # task.failure.%!fqtn
        (udp(address 127.0.0.1:4242)
            (emitmessage task failure: %!alertid)
            (cancelmessage task back to success: %!alertid)
            (remindermessage task still failed: %!alertid))
        (mail(address nobody@localhost)) # this is an error 
        (stop) # do not process next rules if this one matches
   )
   (rule(match resource.exhausted.**) # resource.exhausted.%!kind.%!target
        (mail(address gb@localhost))
        #(nocancelnotify) # do not send messages when alerts are canceled
   )
   (rule(log(address debug)) # match every alert (but those stopped before)
        (udp(address localhost:4243))
   )
   (param mail.mindelaybetweenmails 60)
   (param canceldelay 90)
   (param webconsoleurl http://qron.myurl.com/console/alerts.html)
   (param remindfrequency 60)
   (param graceperiodbeforefirstsend 30)
 )

 # log
 #(log(level debug)(file "/tmp/qron-debug-%!yyyy%!mm%!dd-%!HH%!MM%!SS.log"))
 (log(level debug)(file "/tmp/qron-debug-%!yyyy%!mm%!dd.log"))
 (log(level info)(file "/tmp/qron-%!yyyy%!mm%!dd.log"))
)
